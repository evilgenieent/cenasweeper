{"version":3,"sources":["app.js","board.js","controls.js","environment.js","main.js","resources/helpers.js","resources/index.js","resources/css/main.styl","resources/css/simple-grid.styl"],"names":["App","x","y","minesCount","Board","audio","Audio","bind","init","xChanged","yChanged","minesCountChanged","resetChanged","board","Map","mines","audioPlaying","displayGif","winner","pause","currentTime","setBoard","setCenas","i","column","j","field","cena","visited","flagged","questioned","set","randX","randY","get","push","click","event","ctrlKey","altKey","checkVictory","forEach","endGame","proccessNeighbours","neighbours","length","fieldExists","neighbourField","alert","play","_this","setTimeout","Controls","reset","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","rand","Math","floor","random","config"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\r\n\r\n  constructor() {\r\n\r\n    // default parameters of board\r\n    this.x = 10;\r\n    this.y = 10;\r\n    this.minesCount = 10;\r\n    \r\n  }\r\n\r\n}\r\n","/*\r\n * @Author: hajnyon \r\n * @Date: 2017-06-11 02:39:57 \r\n * @Last Modified by: hajnyon\r\n * @Last Modified time: 2017-06-12 22:54:24\r\n */\r\n\r\n// Aurelia imports\r\nimport { customElement, bindable } from 'aurelia-framework';\r\n// Project imports\r\nimport { rand } from 'resources/helpers';\r\n\r\n@customElement('board')\r\nexport class Board {\r\n\r\n  @bindable x;\r\n  @bindable y;\r\n  @bindable minesCount;\r\n  @bindable reset;\r\n\r\n  constructor() {\r\n\r\n    // audio file\r\n    this.audio = new Audio('audio/john_cena.mp3');\r\n\r\n  }\r\n\r\n  bind() {\r\n\r\n    this.init();\r\n\r\n  }\r\n\r\n  /**\r\n   * Watches bindable changing and delegates init method.\r\n   */\r\n  xChanged() {\r\n    this.init();\r\n  }\r\n  yChanged() {\r\n    this.init();\r\n  }\r\n  minesCountChanged() {\r\n    this.init();\r\n  }\r\n  resetChanged() {\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Initializes the game.\r\n   */\r\n  init() {\r\n\r\n    this.board = new Map;\r\n    this.mines = [];\r\n\r\n    this.audioPlaying = false;\r\n    this.displayGif = false;\r\n    this.winner = false;\r\n    \r\n    // reset audio\r\n    this.audio.pause();\r\n    this.audio.currentTime = 0;\r\n\r\n    this.setBoard();\r\n\r\n    this.setCenas();\r\n\r\n  }\r\n\r\n  /**\r\n   * Set board fields to 2d map.\r\n   */\r\n  setBoard() {\r\n\r\n    // rows\r\n    for (var i = 0; i < this.x; i++) {\r\n\r\n      let column = new Map;\r\n\r\n      // columns\r\n      for (var j = 0; j < this.y; j++) {\r\n\r\n        let field = {\r\n          mines: null,\r\n          cena: false,\r\n          visited: false,\r\n          flagged: false,\r\n          questioned: false\r\n        }\r\n\r\n        column.set(j, field);\r\n\r\n      }\r\n\r\n      this.board.set(i, column);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Set random positions of cenas (mines).\r\n   */\r\n  setCenas() {\r\n\r\n    // set all mines\r\n    for (var i = 0; i < this.minesCount; i++) {\r\n\r\n      // get random positions\r\n      let randX = rand(0, this.x);\r\n      let randY = rand(0, this.y);\r\n\r\n      // find field\r\n      let field = this.board.get(randX).get(randY);\r\n\r\n      // if field isn't already mine, set it, else rerun step\r\n      if (field.cena === true) {\r\n        i--;\r\n      } else {\r\n        field.cena = true;\r\n        this.mines.push(field);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * \r\n   * @param {Object} event Propertios of triggered event.\r\n   * @param {Integer} x X position on 2d board.\r\n   * @param {Integer} y Y position on 2d board.\r\n   */\r\n  click(event, x, y) {\r\n\r\n    // watch click event and recognize if ctrl or alt is pushed aswell\r\n    if(event.ctrlKey) {\r\n\r\n      // click with ctrl (flag it)\r\n      this.flagged(x, y);\r\n\r\n    } else if(event.altKey) {\r\n\r\n      // click with alt (question it)\r\n      this.questioned(x, y);\r\n\r\n    } else {\r\n\r\n      // normal click\r\n      this.visited(x, y);\r\n\r\n    }\r\n\r\n    this.checkVictory();\r\n\r\n  }\r\n\r\n  /**\r\n   * Checks if game isn't already won.\r\n   */\r\n  checkVictory() {\r\n\r\n    let winner = true;\r\n\r\n    // loop 2d board\r\n    this.board.forEach(function (column) {\r\n\r\n      column.forEach(function (field) {\r\n\r\n        // if every noncena field is visited end game\r\n        if (!field.visited && !field.cena) {\r\n          winner = false;\r\n        }\r\n\r\n      });\r\n\r\n    });\r\n\r\n    // end game\r\n    this.winner = winner;\r\n    if (winner) {\r\n      this.endGame();\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Performs actions according to field state.\r\n   * \r\n   * @param {Integer} x X position on board.\r\n   * @param {Integer} y Y position on board.\r\n   */\r\n  visited(x, y) {\r\n    let field = this.board.get(x).get(y);\r\n\r\n    if (field.cena) {\r\n      // field is cena, end game\r\n      this.endGame();\r\n    } else if (field.visited) {\r\n      // field already visited\r\n      return;\r\n    } else {\r\n      // field not visited, perform lookup around\r\n      this.proccessNeighbours(x, y);\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Checks neighbours of the field and proccesses them.\r\n   * \r\n   * @param {Integer} x X position on board.\r\n   * @param {Integer} y Y position on board.\r\n   */\r\n  proccessNeighbours(x, y) {\r\n\r\n    let mines = 0;\r\n    let field = this.board.get(x).get(y);\r\n\r\n    // if field is already visited return\r\n    if (field.visited) return;\r\n\r\n    // possible neighboars\r\n    let neighbours = [\r\n      { x: x - 1, y: y - 1 },\r\n      { x: x - 1, y: y },\r\n      { x: x - 1, y: y + 1 },\r\n      { x: x, y: y - 1 },\r\n      { x: x, y: y + 1 },\r\n      { x: x + 1, y: y - 1 },\r\n      { x: x + 1, y: y },\r\n      { x: x + 1, y: y + 1 }\r\n    ];\r\n\r\n    // loop neighbours\r\n    for (var i = 0; i < neighbours.length; i++) {\r\n\r\n      // check if field exists\r\n      if (!this.fieldExists(neighbours[i])) continue;\r\n\r\n      let neighbourField = this.board.get(neighbours[i].x).get(neighbours[i].y);\r\n\r\n      // add fields mines (cenas) count\r\n      mines += neighbourField.cena ? 1 : 0;\r\n\r\n    }\r\n\r\n    field.mines = mines;\r\n    field.visited = true;\r\n\r\n    // if no mines are present recurse on neighbours\r\n    if (mines === 0) {\r\n      for (var i = 0; i < neighbours.length; i++) {\r\n        if (this.fieldExists(neighbours[i])) {\r\n          this.proccessNeighbours(neighbours[i].x, neighbours[i].y);\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Check fields existence by borders of board.\r\n   * \r\n   * @param {Object} field Field properties.\r\n   */\r\n  fieldExists(field) {\r\n    return field.x > -1 && field.x < this.x && field.y > -1 && field.y < this.y;\r\n  }\r\n\r\n  /**\r\n   * Sets field as flagged.\r\n   * \r\n   * @param {Integer} x X position on board.\r\n   * @param {Integer} y Y position on board.\r\n   */\r\n  flagged(x, y) {\r\n    let field = this.board.get(x).get(y);\r\n\r\n    // no point to flagg visited fields\r\n    if(field.visited) return;\r\n    field.flagged = !field.flagged;\r\n\r\n  }\r\n\r\n  /**\r\n   * Sets field as questioned.\r\n   * \r\n   * @param {Integer} x X position on board.\r\n   * @param {Integer} y Y position on board.\r\n   */\r\n  questioned(x, y) {\r\n    let field = this.board.get(x).get(y);\r\n\r\n    // no point to question visited fields\r\n    if(field.visited) return;\r\n    field.questioned = !field.questioned;\r\n\r\n  }\r\n\r\n  /**\r\n   * Ends game either as win or lose.\r\n   */\r\n  endGame() {\r\n\r\n    // display all cenas (mines)\r\n    for (var i = 0; i < this.mines.length; i++) {\r\n      this.mines[i].visited = true;\r\n    }\r\n\r\n    // if audio already playing don't play it more\r\n    if (this.audioPlaying) return;\r\n\r\n    // win or lose\r\n    if (this.winner) {\r\n      alert('You win!');\r\n    } else {\r\n\r\n      // play audio\r\n      this.audioPlaying = true;\r\n      this.audio.play();\r\n\r\n    }\r\n\r\n    var _this = this;\r\n\r\n    // display gif after little break\r\n    setTimeout(function () {\r\n      _this.displayGif = true;\r\n    }, 2500);\r\n\r\n  }\r\n\r\n}","/*\r\n * @Author: hajnyon \r\n * @Date: 2017-06-11 13:05:02 \r\n * @Last Modified by: hajnyon\r\n * @Last Modified time: 2017-06-12 22:48:56\r\n */\r\n\r\n// Aurelia imports\r\nimport { customElement, bindable } from 'aurelia-framework';\r\n\r\n@customElement('controls')\r\nexport class Controls {\r\n\r\n  @bindable x;\r\n  @bindable y;\r\n  @bindable minesCount;\r\n  @bindable reset;\r\n\r\n  constructor() {\r\n\r\n  }\r\n\r\n  init() {\r\n\r\n    this.reset = !this.reset;\r\n\r\n  }\r\n\r\n}","export default {\r\n  debug: true,\r\n  testing: true\r\n};\r\n","import environment from './environment';\r\n\r\nexport function configure(aurelia) {\r\n  aurelia.use\r\n    .standardConfiguration()\r\n    .feature('resources');\r\n\r\n  if (environment.debug) {\r\n    aurelia.use.developmentLogging();\r\n  }\r\n\r\n  if (environment.testing) {\r\n    aurelia.use.plugin('aurelia-testing');\r\n  }\r\n\r\n  aurelia.start().then(() => aurelia.setRoot());\r\n}\r\n","/*\r\n * @Author: hajnyon \r\n * @Date: 2017-06-11 02:40:03 \r\n * @Last Modified by:   hajnyon \r\n * @Last Modified time: 2017-06-11 02:40:03 \r\n */\r\n\r\nexport function rand(x, y) {\r\n  return Math.floor( Math.random() * y ) + x;\r\n}","export function configure(config) {\r\n  //config.globalResources([]);\r\n}\r\n",null,null],"sourceRoot":".."}