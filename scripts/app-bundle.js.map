{"version":3,"sources":["app.js","board.js","environment.js","main.js","resources/helpers.js","resources/index.js","resources/css/main.styl"],"names":["App","Board","x","y","minesCount","init","board","Map","mines","setBoard","setCenas","console","log","i","column","j","field","cena","visited","flagged","set","randX","randY","get","push","click","event","preventDefault","which","checkVictory","winner","forEach","endGame","proccessNeighbours","neighbours","length","fieldExists","neighbourField","alert","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","then","setRoot","rand","Math","floor","random","config"],"mappings":"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","file":"app-bundle.js","sourcesContent":["export class App {\n\n  constructor() {\n\n  }\n\n}\n","\n// Aurelia imports\nimport { bindable, customElement } from 'aurelia-framework';\n// Project imports\nimport { rand } from 'resources/helpers';\n\n@customElement('board')\nexport class Board {\n\n  @bindable x;\n  @bindable y;\n  @bindable difficulty;\n\n  constructor() {\n\n    this.x = 10;    \n    this.y = 10;    \n    this.minesCount = 10;\n    \n    this.init();\n\n  }\n\n  init() {\n\n    this.board = new Map;\n    this.mines = [];\n\n    this.setBoard();\n\n    this.setCenas();\n\n    console.log(this.board);\n\n  }\n\n  setBoard() {\n\n    for (var i = 0; i < this.x; i++) {\n      \n      let column = new Map;\n\n      for (var j = 0; j < this.y; j++) {\n        let field = {\n          mines: null,\n          cena: false,\n          visited: false,\n          flagged: false\n        }\n        column.set(j, field);\n      }\n      \n      this.board.set(i, column);\n    }\n\n  }\n\n  setCenas() {\n\n    for (var i = 0; i < this.minesCount; i++) {\n\n      let randX = rand(0, this.x);\n      let randY = rand(0, this.y);\n\n      let field = this.board.get(randX).get(randY);\n\n      if(field.cena === true) {\n        i--;\n      } else {\n        field.cena = true;\n        this.mines.push(field);\n      }\n\n    }\n\n  }\n\n  click(event, x, y) {\n    \n    event.preventDefault();\n    switch (event.which) {\n      case 1:\n        // left click\n        this.visited(x, y);\n        break;\n      case 2:\n        // mouse click\n        this.flagged(x, y);\n        break;\n    \n      default:\n        break;\n    }\n\n    this.checkVictory();\n\n  }\n\n  checkVictory() {\n\n    let winner = true;\n\n    this.board.forEach(function(column) {\n\n      column.forEach(function(field) {\n\n        if(!field.visited && !field.cena) {\n          winner = false;\n        }\n\n      });\n\n    });\n\n    this.winner = winner;\n    if(winner) {\n      this.endGame();\n    }\n\n  }\n\n  visited(x, y) {\n    let field = this.board.get(x).get(y);\n\n    if(field.cena) {\n      this.endGame();\n    } else if(field.visited) {\n      return;\n    } else {\n      this.proccessNeighbours(x,y);\n    }\n\n  }\n\n  proccessNeighbours(x, y) {\n\n    let mines = 0;\n    let field = this.board.get(x).get(y);\n\n    if(field.visited) return;\n\n    let neighbours = [\n      {x: x-1, y: y-1},\n      {x: x-1, y: y},\n      {x: x-1, y: y+1},\n      {x: x,   y: y-1},\n      {x: x,   y: y+1},\n      {x: x+1, y: y-1},\n      {x: x+1, y: y},\n      {x: x+1, y: y+1}\n    ];\n\n    for (var i = 0; i < neighbours.length; i++) {\n      \n      if(!this.fieldExists(neighbours[i])) continue;\n\n      let neighbourField = this.board.get(neighbours[i].x).get(neighbours[i].y);\n\n      mines += neighbourField.cena ? 1 : 0;\n\n    }\n\n    field.mines = mines;\n    field.visited = true;\n\n    if(mines === 0) {\n      for (var i = 0; i < neighbours.length; i++) {\n        if(this.fieldExists(neighbours[i]))\n          this.proccessNeighbours(neighbours[i].x, neighbours[i].y);\n      }\n    }\n\n  }\n\n\n  fieldExists(field) {\n    return field.x > -1 && field.x < this.x && field.y > -1 && field.y < this.y;\n  }\n\n  flagged(x, y) {\n    let field = this.board.get(x).get(y);\n    field.flagged = !field.flagged;\n  }\n\n  endGame() {\n    for (var i = 0; i < this.mines.length; i++) {\n      this.mines[i].visited = true;\n    }\n\n    if(this.winner) {\n      alert('You win!');\n    } else {\n      alert('You lost! Muhaha');\n    }\n  }\n\n}","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","\nexport function rand(x, y) {\n  return Math.floor( Math.random() * y ) + x;\n}","export function configure(config) {\n  //config.globalResources([]);\n}\n",null],"sourceRoot":".."}